{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleDelete","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","initialPersons","notifyWith","setTimeout","personToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","toUpdate","returnedPerson","catch","error","console","log","addedPerson","concat","toDelete","ReactDOM","render","document","getElementById"],"mappings":"mOAUeA,EARA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACC,kDACmB,2BAAOD,MAAOA,EAAOC,SAAUA,MCmBrCC,EAtBI,SAAC,GAMb,IALNC,EAKK,EALLA,QACAC,EAIK,EAJLA,UACAC,EAGK,EAHLA,UACAC,EAEK,EAFLA,iBACAC,EACK,EADLA,mBAEA,OACC,0BAAMC,SAAUH,GACf,sCACO,2BAAOL,MAAOG,EAASF,SAAUK,KAExC,wCACS,2BAAOG,KAAK,MAAMT,MAAOI,EAAWH,SAAUM,KAEvD,6BACC,4BAAQE,KAAK,UAAb,UCPWC,EATC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC3B,OAAOD,EAAQE,KAAI,SAACC,GAAD,OAClB,uBAAGC,IAAKD,EAAOE,IACbF,EAAOG,KADT,IACgBH,EAAOI,OACtB,4BAAQC,QAAS,kBAAMP,EAAaE,EAAOE,MAA3C,e,gBCLGI,EAAU,eAoBD,EAlBA,WACX,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAiB3C,EAdA,SAACC,GACZ,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAavD,EAVA,SAACT,GACZ,OAAOK,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BJ,IAAMO,MAAK,SAACC,GAAD,OAAcA,EAASC,SASzD,EANA,SAACT,EAAIU,GAChB,OAAOL,IACFQ,IADE,UACKT,EADL,YACgBJ,GAAMU,GACxBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTtBK,EAPM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,OAAqB,OAAjBA,EACI,KAED,yBAAKC,UAAWD,EAAatB,MAAOsB,EAAaE,U,8NCCzD,IA6HeC,EA7HH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPxB,EADO,KACEyB,EADF,OAEgBD,mBAAS,IAFzB,mBAEPhC,EAFO,KAEEkC,EAFF,OAGoBF,mBAAS,IAH7B,mBAGP/B,EAHO,KAGIkC,EAHJ,OAI0BH,mBAAS,IAJnC,mBAIPI,EAJO,KAIOC,EAJP,OAK0BL,mBAAS,MALnC,mBAKPJ,EALO,KAKOU,EALP,KAOdC,qBAAU,WACNC,IAAuBpB,MAAK,SAACqB,GACzBR,EAAWQ,QAEhB,IAEH,IAAMC,EAAa,SAACZ,GAA+B,IAAtBxB,EAAqB,uDAAd,UAChCgC,EAAgB,CAAER,UAASxB,SAC3BqC,YAAW,WACPL,EAAgB,QACjB,MAkFDM,EACsB,IAAxBR,EAAaS,OACPrC,EACAA,EAAQsC,QAAO,SAACC,GAAD,OACXA,EAAEjC,KAAKkC,cAAcC,SAASb,EAAaY,kBAGzD,OACI,oCACI,yCACA,kBAAC,EAAD,CAAcpB,aAAcA,IAC5B,kBAAC,EAAD,CAAQ/B,MAAOuC,EAActC,SAlFJ,SAACoD,GAC9Bb,EAAgBa,EAAMC,OAAOtD,UAkFzB,yCACA,kBAAC,EAAD,CACIK,UAjFM,SAACgD,GACfA,EAAME,iBAEN,IAAMC,EAAW7C,EAAQ8C,MAAK,SAACP,GAAD,OAAOA,EAAEjC,OAASd,KAChD,GAAIqD,GAIA,GAHWE,OAAOC,QAAP,UACJxD,EADI,2EAGH,CACJ,IAAMyD,E,yVAAQ,IAAQJ,EAAR,CAAkBtC,OAAQd,IACxCuC,EACYa,EAASxC,GAAI4C,GACpBrC,MAAK,SAACsC,GACHzB,EACIzB,EAAQE,KAAI,SAACqC,GAAD,OACRA,EAAElC,KAAOwC,EAASxC,GAAKkC,EAAIW,MAGnChB,EAAW,sBAAD,OAAuBW,EAASvC,OAC1CoB,EAAW,IACXC,EAAa,OAEhBwB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZlB,EAAW,GAAD,OAAIkB,EAAMvC,SAASC,KAAKsC,OAAS,kBAQvDpB,EAJqB,CACjB1B,KAAMd,EACNe,OAAQd,IAIPmB,MAAK,SAAC2C,GACH9B,EAAWzB,EAAQwD,OAAOD,IAC1BrB,EAAW,SAAD,OAAU1C,IACpBkC,EAAW,IACXC,EAAa,OAEhBwB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZlB,EAAW,GAAD,OAAIkB,EAAMvC,SAASC,KAAKsC,OAAS,aAwC/C5D,QAASA,EACTG,iBA/Fa,SAAC+C,GACtBhB,EAAWgB,EAAMC,OAAOtD,QA+FhBI,UAAWA,EACXG,mBA7Fe,SAAC8C,GACxBf,EAAae,EAAMC,OAAOtD,UA8FtB,uCACA,kBAAC,EAAD,CAASW,QAASoC,EAAcnC,aAzCnB,SAACI,GAClB,IAAMoD,EAAWzD,EAAQ8C,MAAK,SAACP,GAAD,OAAOA,EAAElC,KAAOA,KACnC0C,OAAOC,QAAP,iBAAyBS,EAASnD,KAAlC,QAEP0B,EACY3B,GACPO,MAAK,SAACC,GACHY,EAAWzB,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAElC,KAAOA,MAC1C6B,EAAW,WAAD,OAAYuB,EAASnD,UAElC6C,OAAM,WACH1B,EAAWzB,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAElC,KAAOA,MAC1C6B,EAAW,GAAD,OACHuB,EAASnD,KADN,6BAEN,iBC/FxBoD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.eadae55a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter shown with <input value={value} onChange={onChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n\tnewName,\r\n\tnewNumber,\r\n\taddPerson,\r\n\thandleNameChange,\r\n\thandleNumberChange,\r\n}) => {\r\n\treturn (\r\n\t\t<form onSubmit={addPerson}>\r\n\t\t\t<div>\r\n\t\t\t\tname: <input value={newName} onChange={handleNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber: <input type=\"tel\" value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n\treturn persons.map((person) => (\r\n\t\t<p key={person.id}>\r\n\t\t\t{person.name} {person.number}\r\n\t\t\t<button onClick={() => handleDelete(person.id)}>delete</button>\r\n\t\t</p>\r\n\t));\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    return axios\r\n        .put(`${baseUrl}/${id}`, newObject)\r\n        .then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n\tif (notification === null) {\r\n\t\treturn null;\r\n\t}\r\n\treturn <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport personService from './services/persons';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [filterString, setStringFilter] = useState('');\r\n    const [notification, setNotification] = useState(null);\r\n\r\n    useEffect(() => {\r\n        personService.getAll().then((initialPersons) => {\r\n            setPersons(initialPersons);\r\n        });\r\n    }, []);\r\n\r\n    const notifyWith = (message, type = 'success') => {\r\n        setNotification({ message, type });\r\n        setTimeout(() => {\r\n            setNotification(null);\r\n        }, 5000);\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    };\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value);\r\n    };\r\n\r\n    const handleFilterStringChange = (event) => {\r\n        setStringFilter(event.target.value);\r\n    };\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault();\r\n\r\n        const existing = persons.find((p) => p.name === newName);\r\n        if (existing) {\r\n            const ok = window.confirm(\r\n                `${newName} is already added to phonebook, replace the old number with a new one?`\r\n            );\r\n            if (ok) {\r\n                const toUpdate = { ...existing, number: newNumber };\r\n                personService\r\n                    .update(existing.id, toUpdate)\r\n                    .then((returnedPerson) => {\r\n                        setPersons(\r\n                            persons.map((p) =>\r\n                                p.id !== existing.id ? p : returnedPerson\r\n                            )\r\n                        );\r\n                        notifyWith(`Changed number of  ${existing.name}`);\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        notifyWith(`${error.response.data.error}`, 'error');\r\n                    });\r\n            }\r\n        } else {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber,\r\n            };\r\n            personService\r\n                .create(personObject)\r\n                .then((addedPerson) => {\r\n                    setPersons(persons.concat(addedPerson));\r\n                    notifyWith(`Added ${newName}`);\r\n                    setNewName('');\r\n                    setNewNumber('');\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    notifyWith(`${error.response.data.error}`, 'error');\r\n                });\r\n        }\r\n    };\r\n\r\n    const deletePerson = (id) => {\r\n        const toDelete = persons.find((p) => p.id === id);\r\n        const ok = window.confirm(`Delete ${toDelete.name} ?`);\r\n        if (ok) {\r\n            personService\r\n                .remove(id)\r\n                .then((response) => {\r\n                    setPersons(persons.filter((p) => p.id !== id));\r\n                    notifyWith(`Deleted ${toDelete.name}`);\r\n                })\r\n                .catch(() => {\r\n                    setPersons(persons.filter((p) => p.id !== id));\r\n                    notifyWith(\r\n                        `${toDelete.name} had already been removed`,\r\n                        'error'\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    const personToShow =\r\n        filterString.length === 0\r\n            ? persons\r\n            : persons.filter((p) =>\r\n                  p.name.toLowerCase().includes(filterString.toLowerCase())\r\n              );\r\n\r\n    return (\r\n        <>\r\n            <h2>Phonebook</h2>\r\n            <Notification notification={notification} />\r\n            <Filter value={filterString} onChange={handleFilterStringChange} />\r\n            <h3>Add a new</h3>\r\n            <PersonForm\r\n                addPerson={addPerson}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={personToShow} handleDelete={deletePerson} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}