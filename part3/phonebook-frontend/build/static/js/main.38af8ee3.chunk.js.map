{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleDelete","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","initialPersons","notifyWith","setTimeout","personToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","toUpdate","returnedPerson","catch","error","console","log","addedPerson","concat","toDelete","ReactDOM","render","document","getElementById"],"mappings":"mOAUeA,EARA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACC,kDACmB,2BAAOD,MAAOA,EAAOC,SAAUA,MCmBrCC,EAtBI,SAAC,GAMb,IALNC,EAKK,EALLA,QACAC,EAIK,EAJLA,UACAC,EAGK,EAHLA,UACAC,EAEK,EAFLA,iBACAC,EACK,EADLA,mBAEA,OACC,0BAAMC,SAAUH,GACf,sCACO,2BAAOL,MAAOG,EAASF,SAAUK,KAExC,wCACS,2BAAOG,KAAK,MAAMT,MAAOI,EAAWH,SAAUM,KAEvD,6BACC,4BAAQE,KAAK,UAAb,UCPWC,EATC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC3B,OAAOD,EAAQE,KAAI,SAACC,GAAD,OAClB,uBAAGC,IAAKD,EAAOE,IACbF,EAAOG,KADT,IACgBH,EAAOI,OACtB,4BAAQC,QAAS,kBAAMP,EAAaE,EAAOE,MAA3C,e,gBCLGI,EAAU,eAoBD,EAlBA,WACX,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAiB3C,EAdA,SAACC,GACZ,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAavD,EAVA,SAACT,GACZ,OAAOK,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BJ,IAAMO,MAAK,SAACC,GAAD,OAAcA,EAASC,SASzD,EANA,SAACT,EAAIU,GAChB,OAAOL,IACFQ,IADE,UACKT,EADL,YACgBJ,GAAMU,GACxBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTtBK,EAPM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,OAAqB,OAAjBA,EACI,KAED,yBAAKC,UAAWD,EAAatB,MAAOsB,EAAaE,U,8NCCzD,IA4HeC,EA5HH,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACVxB,EADU,KACDyB,EADC,OAEaD,mBAAS,IAFtB,mBAEVhC,EAFU,KAEDkC,EAFC,OAGiBF,mBAAS,IAH1B,mBAGV/B,EAHU,KAGCkC,EAHD,OAIuBH,mBAAS,IAJhC,mBAIVI,EAJU,KAIIC,EAJJ,OAKuBL,mBAAS,MALhC,mBAKVJ,EALU,KAKIU,EALJ,KAOjBC,qBAAU,WACTC,IAAuBpB,MAAK,SAACqB,GAC5BR,EAAWQ,QAEV,IAEH,IAAMC,EAAa,SAACZ,GAA+B,IAAtBxB,EAAqB,uDAAd,UACnCgC,EAAgB,CAAER,UAASxB,SAC3BqC,YAAW,WACVL,EAAgB,QACd,MAiFEM,EACmB,IAAxBR,EAAaS,OACVrC,EACAA,EAAQsC,QAAO,SAACC,GAAD,OACfA,EAAEjC,KAAKkC,cAAcC,SAASb,EAAaY,kBAG/C,OACC,oCACC,yCACA,kBAAC,EAAD,CAAcpB,aAAcA,IAC5B,kBAAC,EAAD,CAAQ/B,MAAOuC,EAActC,SAjFE,SAACoD,GACjCb,EAAgBa,EAAMC,OAAOtD,UAiF5B,yCACA,kBAAC,EAAD,CACCK,UAhFe,SAACgD,GAClBA,EAAME,iBAEN,IAAMC,EAAW7C,EAAQ8C,MAAK,SAACP,GAAD,OAAOA,EAAEjC,OAASd,KAChD,GAAIqD,GAIH,GAHWE,OAAOC,QAAP,UACPxD,EADO,2EAGH,CACP,IAAMyD,E,yVAAQ,IAAQJ,EAAR,CAAkBtC,OAAQd,IACxCuC,EACSa,EAASxC,GAAI4C,GACpBrC,MAAK,SAACsC,GACNzB,EACCzB,EAAQE,KAAI,SAACqC,GAAD,OAAQA,EAAElC,KAAOwC,EAASxC,GAAKkC,EAAIW,MAEhDhB,EAAW,sBAAD,OAAuBW,EAASvC,OAC1CoB,EAAW,IACXC,EAAa,OAEbwB,OAAM,SAACC,GACPC,QAAQC,IAAIF,GACZ3B,EAAWzB,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAElC,KAAOwC,EAASxC,OACnD6B,EAAW,kBAAD,OACSW,EAASvC,KADlB,yCAET,kBASJ0B,EAJqB,CACpB1B,KAAMd,EACNe,OAAQd,IAIPmB,MAAK,SAAC2C,GACN9B,EAAWzB,EAAQwD,OAAOD,IAC1BrB,EAAW,SAAD,OAAU1C,IACpBkC,EAAW,IACXC,EAAa,OAEbwB,OAAM,SAACC,GACPC,QAAQC,IAAIF,EAAMvC,SAASC,KAAKsC,OAChClB,EAAW,GAAD,OAAIkB,EAAMvC,SAASC,KAAKsC,OAAS,aAqC5C5D,QAASA,EACTG,iBA9FsB,SAAC+C,GACzBhB,EAAWgB,EAAMC,OAAOtD,QA8FtBI,UAAWA,EACXG,mBA5FwB,SAAC8C,GAC3Bf,EAAae,EAAMC,OAAOtD,UA6FzB,uCACA,kBAAC,EAAD,CAASW,QAASoC,EAAcnC,aAtCb,SAACI,GACrB,IAAMoD,EAAWzD,EAAQ8C,MAAK,SAACP,GAAD,OAAOA,EAAElC,KAAOA,KACnC0C,OAAOC,QAAP,iBAAyBS,EAASnD,KAAlC,QAEV0B,EACS3B,GACPO,MAAK,SAACC,GACNY,EAAWzB,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAElC,KAAOA,MAC1C6B,EAAW,WAAD,OAAYuB,EAASnD,UAE/B6C,OAAM,WACN1B,EAAWzB,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAElC,KAAOA,MAC1C6B,EAAW,GAAD,OAAIuB,EAASnD,KAAb,6BAA8C,iBC/F7DoD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.38af8ee3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter shown with <input value={value} onChange={onChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n\tnewName,\r\n\tnewNumber,\r\n\taddPerson,\r\n\thandleNameChange,\r\n\thandleNumberChange,\r\n}) => {\r\n\treturn (\r\n\t\t<form onSubmit={addPerson}>\r\n\t\t\t<div>\r\n\t\t\t\tname: <input value={newName} onChange={handleNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber: <input type=\"tel\" value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n\treturn persons.map((person) => (\r\n\t\t<p key={person.id}>\r\n\t\t\t{person.name} {person.number}\r\n\t\t\t<button onClick={() => handleDelete(person.id)}>delete</button>\r\n\t\t</p>\r\n\t));\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    return axios\r\n        .put(`${baseUrl}/${id}`, newObject)\r\n        .then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n\tif (notification === null) {\r\n\t\treturn null;\r\n\t}\r\n\treturn <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport personService from './services/persons';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([]);\r\n\tconst [newName, setNewName] = useState('');\r\n\tconst [newNumber, setNewNumber] = useState('');\r\n\tconst [filterString, setStringFilter] = useState('');\r\n\tconst [notification, setNotification] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tpersonService.getAll().then((initialPersons) => {\r\n\t\t\tsetPersons(initialPersons);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst notifyWith = (message, type = 'success') => {\r\n\t\tsetNotification({ message, type });\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetNotification(null);\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tconst handleNameChange = (event) => {\r\n\t\tsetNewName(event.target.value);\r\n\t};\r\n\r\n\tconst handleNumberChange = (event) => {\r\n\t\tsetNewNumber(event.target.value);\r\n\t};\r\n\r\n\tconst handleFilterStringChange = (event) => {\r\n\t\tsetStringFilter(event.target.value);\r\n\t};\r\n\r\n\tconst addPerson = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst existing = persons.find((p) => p.name === newName);\r\n\t\tif (existing) {\r\n\t\t\tconst ok = window.confirm(\r\n\t\t\t\t`${newName} is already added to phonebook, replace the old number with a new one?`\r\n\t\t\t);\r\n\t\t\tif (ok) {\r\n\t\t\t\tconst toUpdate = { ...existing, number: newNumber };\r\n\t\t\t\tpersonService\r\n\t\t\t\t\t.update(existing.id, toUpdate)\r\n\t\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\t\tsetPersons(\r\n\t\t\t\t\t\t\tpersons.map((p) => (p.id !== existing.id ? p : returnedPerson))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tnotifyWith(`Changed number of  ${existing.name}`);\r\n\t\t\t\t\t\tsetNewName('');\r\n\t\t\t\t\t\tsetNewNumber('');\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\tsetPersons(persons.filter((p) => p.id !== existing.id));\r\n\t\t\t\t\t\tnotifyWith(\r\n\t\t\t\t\t\t\t`Information of ${existing.name} has already been removed from server`,\r\n\t\t\t\t\t\t\t'error'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst personObject = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber,\r\n\t\t\t};\r\n\t\t\tpersonService\r\n\t\t\t\t.create(personObject)\r\n\t\t\t\t.then((addedPerson) => {\r\n\t\t\t\t\tsetPersons(persons.concat(addedPerson));\r\n\t\t\t\t\tnotifyWith(`Added ${newName}`);\r\n\t\t\t\t\tsetNewName('');\r\n\t\t\t\t\tsetNewNumber('');\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error.response.data.error);\r\n\t\t\t\t\tnotifyWith(`${error.response.data.error}`, 'error');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deletePerson = (id) => {\r\n\t\tconst toDelete = persons.find((p) => p.id === id);\r\n\t\tconst ok = window.confirm(`Delete ${toDelete.name} ?`);\r\n\t\tif (ok) {\r\n\t\t\tpersonService\r\n\t\t\t\t.remove(id)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tsetPersons(persons.filter((p) => p.id !== id));\r\n\t\t\t\t\tnotifyWith(`Deleted ${toDelete.name}`);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tsetPersons(persons.filter((p) => p.id !== id));\r\n\t\t\t\t\tnotifyWith(`${toDelete.name} had already been removed`, 'error');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst personToShow =\r\n\t\tfilterString.length === 0\r\n\t\t\t? persons\r\n\t\t\t: persons.filter((p) =>\r\n\t\t\t\t\tp.name.toLowerCase().includes(filterString.toLowerCase())\r\n\t\t\t  );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Phonebook</h2>\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<Filter value={filterString} onChange={handleFilterStringChange} />\r\n\t\t\t<h3>Add a new</h3>\r\n\t\t\t<PersonForm\r\n\t\t\t\taddPerson={addPerson}\r\n\t\t\t\tnewName={newName}\r\n\t\t\t\thandleNameChange={handleNameChange}\r\n\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\thandleNumberChange={handleNumberChange}\r\n\t\t\t/>\r\n\t\t\t<h3>Numbers</h3>\r\n\t\t\t<Persons persons={personToShow} handleDelete={deletePerson} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}